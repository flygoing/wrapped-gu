{
  "contractName": "IForge",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "forge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"forge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/IForge.sol\":\"IForge\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/ICards.sol\":{\"keccak256\":\"0x0f7667eeab8f9ea4b34baeefa946fac6d621205280b73d068aa8d6271c5bb770\",\"urls\":[\"bzz-raw://763403563930b30cdb29dcd57bd49d0a8995524e312fb216e54e84a6b0ceee82\",\"dweb:/ipfs/QmXBjpCayHbkYMpbFjdNe4VRoJvLsn7wCiU4Dfn2vZZwoF\"]},\"/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/IForge.sol\":{\"keccak256\":\"0x1cf210aa1a811bae7565a9397318a93e8cc8bbe529881284f43c2b01e9ff25e9\",\"urls\":[\"bzz-raw://5bfdf6fec9770d27db376d3d7f020636462b7706a9182c7982f9f74315295a30\",\"dweb:/ipfs/QmeLGrBKe6N8bVserahPw8RNj53nqgBY74H6amvNeKuSnJ\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\",\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.12;\n\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\n\nimport \"./ICards.sol\";\n\ncontract IForge is Ownable {\n\n    bool public locked = false;\n\n    function forge(uint[] memory _ids) public;\n}\n",
  "sourcePath": "/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/IForge.sol",
  "ast": {
    "absolutePath": "/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/IForge.sol",
    "exportedSymbols": {
      "IForge": [
        770
      ]
    },
    "id": 771,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 756,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 1681,
        "src": "25:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/ICards.sol",
        "file": "./ICards.sol",
        "id": 758,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 755,
        "src": "82:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 759,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1680,
              "src": "125:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1680",
                "typeString": "contract Ownable"
              }
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "125:7:4"
          }
        ],
        "contractDependencies": [
          1181,
          1680
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 770,
        "linearizedBaseContracts": [
          770,
          1680,
          1181
        ],
        "name": "IForge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 763,
            "name": "locked",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "140:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "140:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 762,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "161:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 769,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 769,
                  "src": "188:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 764,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "188:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 765,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "188:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:20:4"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:4"
            },
            "scope": 770,
            "src": "173:42:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 771,
        "src": "106:111:4"
      }
    ],
    "src": "0:218:4"
  },
  "legacyAST": {
    "absolutePath": "/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/IForge.sol",
    "exportedSymbols": {
      "IForge": [
        770
      ]
    },
    "id": 771,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 756,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 1681,
        "src": "25:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nate/workspace/gu-uniswap/contracts/contracts/interfaces/ICards.sol",
        "file": "./ICards.sol",
        "id": 758,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 755,
        "src": "82:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 759,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1680,
              "src": "125:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1680",
                "typeString": "contract Ownable"
              }
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "125:7:4"
          }
        ],
        "contractDependencies": [
          1181,
          1680
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 770,
        "linearizedBaseContracts": [
          770,
          1680,
          1181
        ],
        "name": "IForge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 763,
            "name": "locked",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "140:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "140:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 762,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "161:5:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 769,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 769,
                  "src": "188:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 764,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "188:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 765,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "188:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:20:4"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:4"
            },
            "scope": 770,
            "src": "173:42:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 771,
        "src": "106:111:4"
      }
    ],
    "src": "0:218:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-30T01:37:51.854Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}